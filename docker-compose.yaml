# Requires the latest version of Docker Compose.
# Docker Compose V2 is recommended.
# `docker-compose.yaml` files cannot use shell outputs as their inputs.
# An `.env` file may be used to specify variables instead.

services:
  train:  # Service name
    image: pytorch_source:${TRAIN_NAME:-train}  # Image to use
    ipc: host  # Equivalent to `--ipc=host` in `docker run`. Known security vulnerability but allows shared memory.
    tty: true  # Equivalent to `-t` flag in `docker run`.
    init: true  # Equivalent to `--init` flag in `docker run`.
    stdin_open: true  # equivalent to `-i` flag in `docker run`.
    volumes:  # Add volumes as necessary.
      - $PWD:${PROJECT_ROOT:-/opt/project}
    build:  # Options for building. Used when `--build` is called in `docker compose`.
      target: train. # Specify build target.
      context: .  # .dockerignore should remove all context, making this equivalent to `Makefile` results.
      dockerfile: Dockerfile
      cache_from:  # Create the cache images beforehand with the Makefile.
        - pytorch_source:${INSTALL_NAME:-build_install}
        - pytorch_source:${TORCH_NAME:-'build_torch-v.1.9.1'}
      # All arguments given during the build with must be respecified
      # in `args` to prevent a cache miss from occurring.
      # Default values of the `Dockerfile` (but not the `Makefile`) may be omitted.
      args:  # Equivalent to `--build-arg`.
        TORCH_CUDA_ARCH_LIST: ${CC:-'5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX'}
        PYTORCH_VERSION_TAG: ${PYTORCH_VERSION_TAG:-v1.9.1}
        TORCHVISION_VERSION_TAG: ${TORCHVISION_VERSION_TAG:-v0.10.1}
        TORCHTEXT_VERSION_TAG: ${TORCHTEXT_VERSION_TAG:-v0.10.1}
        TORCHAUDIO_VERSION_TAG: ${TORCHAUDIO_VERSION_TAG:-v0.9.1}
        GID: ${GID:-1000}  # Must be specified manually
        UID: ${UID:-1000}  # Must be specified manually
    working_dir: ${PROJECT_ROOT:-/opt/project}
#    ports:  # Only necessary for Tensorboard/Jupyter.
#      - "${PORT:-8080}:22"
    environment:  # Environment variables for the container, not the build. Equivalent to `--env`
      TZ: Asia/Seoul
      CUDA_DEVICE_ORDER: PCI_BUS_ID
    deploy:  # API dependent on docker-compose version.
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [ gpu ]
#              device_ids: [ '0' ]  # Use only GPU 0.

  # Perhaps placing two unrelated services in the same file
  # is not best practice, but I did not wish to create another file.
  ngc:
    image: pytorch_source:ngc-${YEAR-21}.${MONTH-09}
    ipc: host
    tty: true
    init: true
    stdin_open: true
    volumes:
      - $PWD:${PROJECT_ROOT:-/opt/project}
    build:
      target: ngc
      context: .
      dockerfile: ngc.Dockerfile
      args:
        YEAR: ${YEAR:-21}
        MONTH: ${MONTH:-09}
        GID: ${GID:-1000}
        UID: ${UID:-1000}
    working_dir: ${PROJECT_ROOT:-/opt/project}
    environment:
      TZ: Asia/Seoul
      CUDA_DEVICE_ORDER: PCI_BUS_ID
